summarize(
weight=n()
)
text_df = tibble(messageId = forum_data$mongoid, text = forum_data$body)
climate_bigrams = c("greenhouse gas","greenhouse effect", "greenhouse gases", "carbon dioxide","global warming", "climate change", "fossil Fuel", "sea level", "renewable energy")
climate_terms<-c("CO2","emissions", "weather",  "climate",  "temperature", "unfcc", "cop", "indc", "ipcc", "ppm", "methane","mitigation", "greenhouse")
tokenized= text_df %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
bigrams = text_df %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2)
tokenized$word<-tolower(tokenized$word)
bigrams$bigram<-tolower(bigrams$bigram)
tokenized= text_df %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
Climatewords = tokenized %>%  mutate(n= ifelse(word %in% climate_terms,1,0))
Climatewords <- Climatewords %>% group_by(messageId)%>%summarize(count= n())%>%filter(count>=0)
#
get_sentiment=function(id){
author_messages<- forum_data %>%
filter(author_id %in% c(id))
author_sentiments<- Climatewords$count
author_sentiments$count
}
links_posts2<-links_posts
names(links_posts2)<-c("author_id", "messageId", "parent_message_id", "author_parent_id")
new_edgelist<- inner_join(Climatewords,links_posts2, by = "messageId")
View(links_posts)
View(links_posts2)
names(links_posts2)
library(flexdashboard)
library(dplyr)
library(visNetwork)
library(igraph)
library(tidytext)
library(tidyr)
library(wordcloud2)
forum_data<-read.csv('ClimateForum15.csv',stringsAsFactors=FALSE)
#if no parent ,responsing to the main post
links_posts =
forum_data %>%
filter(X_type %in% c('Comment')) %>%
select(author_id,mongoid,parent_ids,comment_thread_id) %>%
mutate(parent=ifelse(parent_ids=="",as.character(comment_thread_id),as.character(parent_ids))) %>%
select(author_id,mongoid,parent)
#but we need table of authors not posts
get_user_from_post = function(post_id){
forum_data[forum_data$mongoid==post_id,]$author_id
}
links_posts$author_parent<-sapply(links_posts$parent,get_user_from_post)
weighted_links = links_posts %>%
group_by(author_id,author_parent) %>%
summarize(
weight=n()
)
text_df = tibble(messageId = forum_data$mongoid, text = forum_data$body)
climate_bigrams = c("greenhouse gas","greenhouse effect", "greenhouse gases", "carbon dioxide","global warming", "climate change", "fossil Fuel", "sea level", "renewable energy")
climate_terms<-c("CO2","emissions", "weather",  "climate",  "temperature", "unfcc", "cop", "indc", "ipcc", "ppm", "methane","mitigation", "greenhouse")
tokenized= text_df %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
bigrams = text_df %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2)
tokenized$word<-tolower(tokenized$word)
bigrams$bigram<-tolower(bigrams$bigram)
Climatewords = tokenized %>%  mutate(n= ifelse(word %in% climate_terms,1,0))
Climatewords <- Climatewords %>% group_by(messageId)%>%summarize(count= n())%>%filter(count>=0)
get_sentiment=function(id){
author_messages<- forum_data %>%
filter(author_id %in% c(id))
author_sentiments<- Climatewords$count
author_sentiments$count
}
links_posts2<-links_posts
#names(links_posts2)<-c("author_id", "messageId", "parent_message_id", "author_parent_id")
new_edgelist<- inner_join(Climatewords,links_posts2, by = "messageId")
get_count<-function(id)
{ t1<- filter(Climatewords, Climatewords$messageId==id)
if(nrow(t1)!=0) return (t1$count)
else
return (0)
}
for ( i in 1:nrow(new_edgelist))
{new_edgelist$parentcount[i] <- get_count(new_edgelist$parent_message_id[i])}
new_edgelist <- new_edgelist %>% mutate(weight = count + parentcount)
final_edgelist <-select(new_edgelist, author_id, author_parent_id, weight)
final_edgelist<-final_edgelist%>%group_by(author_id, author_parent_id, weight) %>% summarize (weight2=sum())
final_edgelist$author_parent<-sapply(final_edgelist$author_parent_id ,get_user_from_post)
#links_posts$author<-sapply(final_edgelist$author_id,get_user_from_post)
levels(as.factor(final_edgelist$author_id))
levels(as.factor(final_edgelist$author_id))
VERTEX<-as.data.frame(unique(c(levels(as.factor(final_edgelist$author_id)),levels(as.factor(final_edgelist$author_parent_id)))))
names(VERTEX)<-c("author")
final_edgelist<-filter(final_edgelist, weight>100)
g<-graph_from_data_frame(final_edgelist, directed = FALSE, vertices = VERTEX$author)
plot(g,layout=layout.fruchterman.reingold, vertex.size=5, edge.width=final_edgelist$weight/100)
View(final_edgelist)
View(bigrams)
Climatebigrams<- bigrams %>%
mutate(n= ifelse(bigram %in% climate_bigrams,1,0)
Climatebigrams <- Climatebigrams %>% group_by(messageId)%>%summarize(count= n())%>%filter(count>=0)
Climatebigrams<- bigrams %>%
mutate(n= ifelse(bigram %in% climate_bigrams,1,0))
View(Climatebigrams)
Climatebigrams <- Climatebigrams %>% group_by(messageId)%>%summarize(count= n())%>%filter(count>=0)
Climatebigrams <- Climatebigrams %>% group_by(messageId,bigram)%>%summarize(count= n())%>%filter(count>=0)
Climatebigrams<- bigrams %>%
mutate(n= ifelse(bigram %in% climate_bigrams,1,0))
Climatebigrams <- Climatebigrams %>% group_by(messageId,bigram)%>%summarize(count= n())%>%filter(count>=0)
Climatebigrams <- Climatebigrams %>% group_by(messageId,bigram)%>%summarize(count= n())%>%filter(count>=0)
Climatebigrams<-filter(Climatebigrams, n >0)
Climatebigrams<- bigrams %>%
mutate(n= ifelse(bigram %in% climate_bigrams,1,0))
Climatebigrams<-filter(Climatebigrams, n >0)
Climatebigrams <- Climatebigrams %>% group_by(messageId,bigram)%>%summarize(count= n())%>%filter(count>=0)
links_posts2<-links_posts
links_posts3<-links_posts
names(links_posts2)<-c("author_id", "messageId", "parent_message_id", "author_parent_id")
View(links_posts3)
new_edgelist2<-inner_join(Climatebigrams,links_posts3, by ="messageId")
links_posts3<-links_posts
names(links_posts2)<-c("author_id", "messageId", "parent_message_id", "author_parent_id")
names(links_posts3)<-c("author_id", "messageId", "parent_message_id", "author_parent_id")
new_edgelist<- inner_join(Climatewords,links_posts2, by = "messageId")
new_edgelist2<-inner_join(Climatebigrams,links_posts3, by ="messageId")
get_count2<-function(id)
{ t1<- filter(Climatebigrams, Climatebigrams$messageId==id)
if(nrow(t1)!=0) return (t1$count)
else
return (0)
}
for ( i in 1:nrow(new_edgelist))
{new_edgelist$parentcount[i] <- get_count(new_edgelist$parent_message_id[i])}
for ( i in 1:nrow(new_edgelist2))
{new_edgelist2$parentcount[i] <- get_count2(new_edgelist2$parent_message_id[i])}
View(new_edgelist2)
new_edgelist3-new_edgelist2%>%group_by(author_id,author_parent_id,bigram)%>%summarize(count= sum(n))
new_edgelist2-new_edgelist2%>%group_by(author_id,author_parent_id,bigram)%>%summarize(count= sum(n))
new_edgelist2-new_edgelist2%>%group_by(author_id,author_parent_id,bigram)%>%summarize(count= sum())
new_edgelist2-new_edgelist2%>%group_by(author_id,author_parent_id,bigram)%>%summarize(weight=sum())
new_edgelist2<-new_edgelist2%>%group_by(author_id,author_parent_id,bigram)%>%summarize(weight=sum())
new_edgelist2<-inner_join(Climatebigrams,links_posts3, by ="messageId")
new_edgelist3<-new_edgelist2%>%group_by(author_id,author_parent_id,bigram,count)%>%summarize(weight=sum(count))
View(new_edgelist3)
new_edgelist3<-new_edgelist2%>%group_by(author_id,author_parent_id,bigram)%>%summarize(weight=sum(count))
new_edgelist3<-filter(new_edgelist3, author_id != author_parent_id)
new_edgelist3<-mutate(new_edgelist3, to = author_id, from = author_parent_id)
new_edgelist3<-mutate(new_edgelist3, to = author_id, from = author_parent_id, -author_id, -author_parent_id)
new_edgelist3<-new_edgelist2%>%group_by(author_id,author_parent_id,bigram)%>%summarize(weight=sum(count))
new_edgelist3<-filter(new_edgelist3, author_id != author_parent_id)
new_edgelist3<-new_edgelist2%>%group_by(author_id,author_parent_id,bigram)%>%summarize(weight=sum(count))
new_edgelist3<-filter(new_edgelist3, author_id != author_parent_id)
new_edgelist3<-mutate(new_edgelist3, to = author_id, from = author_parent_id)
new_edgelist3<-select(-author_id, -author_parent_id)
new_edgelist3<-select(new_edgelist3, -author_id, -author_parent_id)
new_edgelist3<-select(new_edgelist3, -author_id, -author_parent_id)
VERTEX2<-as.data.frame(unique(c(levels(as.factor(new_edgelist3$author_id)),levels(as.factor(new_edgelist3$author_parent_id)))))
names(VERTEX2)<-c("author")
g2<-graph_from_data_frame(new_edgelist3, directed = FALSE, vertices = VERTEX$author)
plot(g2,layout=layout.fruchterman.reingold, vertex.size=5, edge.width=final_edgelist$weight)
plot(g2,layout=layout.fruchterman.reingold, vertex.size=5, edge.width=new_edgelist3$weight)
plot(g,layout=layout.fruchterman.reingold, vertex.size=5, edge.width=final_edgelist$weight/100)
library(flexdashboard)
library(dplyr)
library(visNetwork)
library(igraph)
library(tidytext)
library(tidyr)
library(wordcloud2)
forum_data<-read.csv('ClimateForum15.csv',stringsAsFactors=FALSE)
nodes_authors =
forum_data %>%
group_by(author_id) %>%
summarize(
username=last(author_username),
posts=n(),
thread_started=length(X_type[X_type %in% c('CommentThread')]),
votes_up=sum(votes_up_count),
comments=sum(comment_count[!is.na(comment_count)])
)
nodes_authors$thread_initiatior<-ifelse(nodes_authors$thread_started>0,"Initiator","Commenter")
#if no parent ,responsing to the main post
links_posts =
forum_data %>%
filter(X_type %in% c('Comment')) %>%
select(author_id,mongoid,parent_ids,comment_thread_id) %>%
mutate(parent=ifelse(parent_ids=="",as.character(comment_thread_id),as.character(parent_ids))) %>%
select(author_id,mongoid,parent)
#but we need table of authors not posts
get_user_from_post = function(post_id){
forum_data[forum_data$mongoid==post_id,]$author_id
}
links_posts$author_parent<-sapply(links_posts$parent,get_user_from_post)
weighted_links = links_posts %>%
group_by(author_id,author_parent) %>%
summarize(
weight=n()
)
text_df = tibble(messageId = forum_data$mongoid, text = forum_data$body)
climate_bigrams = c("greenhouse gas","greenhouse effect", "greenhouse gases", "carbon dioxide","global warming", "climate change", "fossil Fuel", "sea level", "renewable energy")
climate_terms<-c("CO2","emissions", "weather",  "climate",  "temperature", "unfcc", "cop", "indc", "ipcc", "ppm", "methane","mitigation", "greenhouse")
tokenized= text_df %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
bigrams = text_df %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2)
tokenized$word<-tolower(tokenized$word)
bigrams$bigram<-tolower(bigrams$bigram)
#wordFreq = tokenized %>%
# anti_join(stop_words) %>%
#mutate(countofwords=count(word %in% climate_terms))
#wordFreq = tokenized %>%
#  anti_join(stop_words) %>%
# count(word) %>%
#filter(n>30)
Climatewords =
tokenized %>%
mutate(n= ifelse(word %in% climate_terms,1,0))
Climatewords <- Climatewords %>% group_by(messageId)%>%summarize(count= n())%>%filter(count>=0)
Climatebigrams<- bigrams %>%
mutate(n= ifelse(bigram %in% climate_bigrams,1,0))
Climatebigrams<-filter(Climatebigrams, n >0)
Climatebigrams <- Climatebigrams %>% group_by(messageId,bigram)%>%summarize(count= n())%>%filter(count>=0)
get_sentiment=function(id){
author_messages<- forum_data %>%
filter(author_id %in% c(id))
author_sentiments<- Climatewords$count
author_sentiments$count
}
get_sentiment2=function(id){
author_messages<- forum_data %>%
filter(author_id %in% c(id))
author_sentiments<- Climatewords$count
author_sentiments$count
}
links_posts2<-links_posts
links_posts3<-links_posts
names(links_posts2)<-c("author_id", "messageId", "parent_message_id", "author_parent_id")
names(links_posts3)<-c("author_id", "messageId", "parent_message_id", "author_parent_id")
new_edgelist<- inner_join(Climatewords,links_posts2, by = "messageId")
new_edgelist2<-inner_join(Climatebigrams,links_posts3, by ="messageId")
get_count<-function(id)
{ t1<- filter(Climatewords, Climatewords$messageId==id)
if(nrow(t1)!=0) return (t1$count)
else
return (0)
}
get_count2<-function(id)
{ t1<- filter(Climatebigrams, Climatebigrams$messageId==id)
if(nrow(t1)!=0) return (t1$count)
else
return (0)
}
for ( i in 1:nrow(new_edgelist))
{new_edgelist$parentcount[i] <- get_count(new_edgelist$parent_message_id[i])}
new_edgelist3<-new_edgelist2%>%group_by(author_id,author_parent_id,bigram)%>%summarize(weight=sum(count))
new_edgelist3<-filter(new_edgelist3, author_id != author_parent_id)
new_edgelist3<-mutate(new_edgelist3, to = author_id, from = author_parent_id)
new_edgelist <- new_edgelist %>% mutate(weight = count + parentcount)
final_edgelist <-select(new_edgelist, author_id, author_parent_id, weight)
final_edgelist<-final_edgelist%>%group_by(author_id, author_parent_id, weight) %>% summarize (weight2=sum())
final_edgelist$author_parent<-sapply(final_edgelist$author_parent_id ,get_user_from_post)
#links_posts$author<-sapply(final_edgelist$author_id,get_user_from_post)
VERTEX<-as.data.frame(unique(c(levels(as.factor(final_edgelist$author_id)),levels(as.factor(final_edgelist$author_parent_id)))))
names(VERTEX)<-c("author")
#final_edgelist<-filter(final_edgelist, weight>100)
VERTEX2<-as.data.frame(unique(c(levels(as.factor(new_edgelist3$author_id)),levels(as.factor(new_edgelist3$author_parent_id)))))
names(VERTEX2)<-c("author")
g<-graph_from_data_frame(final_edgelist, directed = FALSE, vertices = VERTEX$author)
g2<-graph_from_data_frame(new_edgelist3, directed = FALSE, vertices = VERTEX$author)
plot(g,layout=layout.fruchterman.reingold, vertex.size=5, edge.width=final_edgelist$weight/100)
plot(g2,layout=layout.fruchterman.reingold, vertex.size=5, edge.width=new_edgelist3$weight)
new_edgelist3<-filter(new_edgelist3, bigram==input$bigram)
library(flexdashboard)
library(dplyr)
library(visNetwork)
library(igraph)
library(tidytext)
library(tidyr)
library(wordcloud2)
forum_data<-read.csv('ClimateForum15.csv',stringsAsFactors=FALSE)
nodes_authors =
forum_data %>%
group_by(author_id) %>%
summarize(
username=last(author_username),
posts=n(),
thread_started=length(X_type[X_type %in% c('CommentThread')]),
votes_up=sum(votes_up_count),
comments=sum(comment_count[!is.na(comment_count)])
)
nodes_authors$thread_initiatior<-ifelse(nodes_authors$thread_started>0,"Initiator","Commenter")
#if no parent ,responsing to the main post
links_posts =
forum_data %>%
filter(X_type %in% c('Comment')) %>%
select(author_id,mongoid,parent_ids,comment_thread_id) %>%
mutate(parent=ifelse(parent_ids=="",as.character(comment_thread_id),as.character(parent_ids))) %>%
select(author_id,mongoid,parent)
#but we need table of authors not posts
get_user_from_post = function(post_id){
forum_data[forum_data$mongoid==post_id,]$author_id
}
links_posts$author_parent<-sapply(links_posts$parent,get_user_from_post)
weighted_links = links_posts %>%
group_by(author_id,author_parent) %>%
summarize(
weight=n()
)
text_df = tibble(messageId = forum_data$mongoid, text = forum_data$body)
climate_bigrams = c("greenhouse gas","greenhouse effect", "greenhouse gases", "carbon dioxide","global warming", "climate change", "fossil Fuel", "sea level", "renewable energy")
climate_terms<-c("CO2","emissions", "weather",  "climate",  "temperature", "unfcc", "cop", "indc", "ipcc", "ppm", "methane","mitigation", "greenhouse")
tokenized= text_df %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
bigrams = text_df %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2)
tokenized$word<-tolower(tokenized$word)
bigrams$bigram<-tolower(bigrams$bigram)
#wordFreq = tokenized %>%
# anti_join(stop_words) %>%
#mutate(countofwords=count(word %in% climate_terms))
#wordFreq = tokenized %>%
#  anti_join(stop_words) %>%
# count(word) %>%
#filter(n>30)
Climatewords =
tokenized %>%
mutate(n= ifelse(word %in% climate_terms,1,0))
Climatewords <- Climatewords %>% group_by(messageId)%>%summarize(count= n())%>%filter(count>=0)
Climatebigrams<- bigrams %>%
mutate(n= ifelse(bigram %in% climate_bigrams,1,0))
Climatebigrams<-filter(Climatebigrams, n >0)
Climatebigrams <- Climatebigrams %>% group_by(messageId,bigram)%>%summarize(count= n())%>%filter(count>=0)
get_sentiment=function(id){
author_messages<- forum_data %>%
filter(author_id %in% c(id))
author_sentiments<- Climatewords$count
author_sentiments$count
}
get_sentiment2=function(id){
author_messages<- forum_data %>%
filter(author_id %in% c(id))
author_sentiments<- Climatewords$count
author_sentiments$count
}
links_posts2<-links_posts
links_posts3<-links_posts
names(links_posts2)<-c("author_id", "messageId", "parent_message_id", "author_parent_id")
names(links_posts3)<-c("author_id", "messageId", "parent_message_id", "author_parent_id")
new_edgelist<- inner_join(Climatewords,links_posts2, by = "messageId")
new_edgelist2<-inner_join(Climatebigrams,links_posts3, by ="messageId")
get_count<-function(id)
{ t1<- filter(Climatewords, Climatewords$messageId==id)
if(nrow(t1)!=0) return (t1$count)
else
return (0)
}
get_count2<-function(id)
{ t1<- filter(Climatebigrams, Climatebigrams$messageId==id)
if(nrow(t1)!=0) return (t1$count)
else
return (0)
}
for ( i in 1:nrow(new_edgelist))
{new_edgelist$parentcount[i] <- get_count(new_edgelist$parent_message_id[i])}
new_edgelist3<-new_edgelist2%>%group_by(author_id,author_parent_id,bigram)%>%summarize(weight=sum(count))
new_edgelist3<-filter(new_edgelist3, author_id != author_parent_id)
new_edgelist3<-mutate(new_edgelist3, to = author_id, from = author_parent_id)
new_edgelist <- new_edgelist %>% mutate(weight = count + parentcount)
final_edgelist <-select(new_edgelist, author_id, author_parent_id, weight)
final_edgelist<-final_edgelist%>%group_by(author_id, author_parent_id, weight) %>% summarize (weight2=sum())
final_edgelist$author_parent<-sapply(final_edgelist$author_parent_id ,get_user_from_post)
#links_posts$author<-sapply(final_edgelist$author_id,get_user_from_post)
VERTEX<-as.data.frame(unique(c(levels(as.factor(final_edgelist$author_id)),levels(as.factor(final_edgelist$author_parent_id)))))
names(VERTEX)<-c("author")
#final_edgelist<-filter(final_edgelist, weight>100)
VERTEX2<-as.data.frame(unique(c(levels(as.factor(new_edgelist3$author_id)),levels(as.factor(new_edgelist3$author_parent_id)))))
names(VERTEX2)<-c("author")
g<-graph_from_data_frame(final_edgelist, directed = FALSE, vertices = VERTEX$author)
g2<-graph_from_data_frame(new_edgelist3, directed = FALSE, vertices = VERTEX$author)
plot(g,layout=layout.fruchterman.reingold, vertex.size=5, edge.width=final_edgelist$weight/100)
plot(g2,layout=layout.fruchterman.reingold, vertex.size=5, edge.width=new_edgelist3$weight)
new_edgelist3<-filter(new_edgelist3, bigram=="carbon dioxide")
View(new_edgelist3)
new_edgelist3<-filter(new_edgelist3, bigram=="greenhouse gas")
View(new_edgelist3)
Climatewords2<-Climatewords%>% group_by(messageId,word)%>%summarize(count= n())%>%filter(count>=0)
Climatewords2<-Climatewords%>% group_by(messageId,words)%>%summarize(count= n())%>%filter(count>=0)
View(Climatewords)
Climatewords =
tokenized %>%
mutate(n= ifelse(word %in% climate_terms,1,0))
Climatewords2<-Climatewords%>% group_by(messageId,words)%>%summarize(count= n())%>%filter(count>=0)
View(Climatewords)
Climatewords2<-Climatewords%>% group_by(messageId,word)%>%summarize(count= n())%>%filter(count>=0)
View(Climatewords2)
Climatebigrams2<-filter(Climatebigrams, n >0)
Climatewords2<-Climatewords%>% group_by(messageId,word)%>%summarize(count= n())%>%filter(count>=0)
Climatewords =
tokenized %>%
mutate(n= ifelse(word %in% climate_terms,1,0))
View(Climatewords)
Climatewords2<-filter(Climatewords, n >0)
Climatewords2<-Climatewords2%>% group_by(messageId,word)%>%summarize(count= n())%>%filter(count>=0)
new_edgelist4<-inner_join(Climatewords2, links_posts4, by ="messageId")
links_posts4<-links_posts
new_edgelist4<-inner_join(Climatewords2, links_posts4, by ="messageId")
names(links_posts4)<-c("author_id", "messageId", "parent_message_id", "author_parent_id")
new_edgelist4<-inner_join(Climatewords2, links_posts4, by ="messageId")
get_count3<-function(id)
{ t1<- filter(Climatewords2, Climatewords2$messageId==id)
if(nrow(t1)!=0) return (t1$count)
else
return (0)
}
new_edgelist5<-new_edgelist4%>%group_by(author_id,author_parent_id,word)%>%summarize(weight=sum(count))
new_edgelist5<-filter(new_edgelist5, author_id != author_parent_id)
VERTEX3<-as.data.frame(unique(c(levels(as.factor(new_edgelist5$author_id)),levels(as.factor(new_edgelist5$author_parent_id)))))
names(VERTEX2)<-c("author")
g3<-graph_from_data_frame(new_edgelist5, directed = FALSE, vertices = VERTEX$author)
plot(g3,layout=layout.fruchterman.reingold, vertex.size=5, edge.width=new_edgelist3$weight)
View(VERTEX3)
names(VERTEX3)<-c("author")
library(tidyverse)
library(ggplot2)
setwd("C:/Users/samee/Dropbox/NYU-PhD/3. Fall 2019/Messy Data and ML/Assignment 5")
installed.packages("tidytext")
install.packages("tidytext")
install.packages("gutenbergr")
library(gutenbergr)
setwd("C:/Users/samee/Dropbox/NYU-PhD/3. Fall 2019/Messy Data and ML/Assignment 5")
theme_set(theme_bw())
gutenberg_metadata
hgwells <- gutenberg_download(c(35, 36, 5230, 159))
bronte <- gutenberg_download(c(1260, 768, 969, 9182, 767))
View(hgwells)
hgwells <- hgwells %>% mutate(author = "h.g. wells")
bronte <- bronte %>% mutate(author = "bronte sisters")
text_hgwells <-hgwells %>% unnest_tokens(word, text)
library(tidyverse)
library(tidytext)
library(gutenbergr)
library(ggplot2)
text_hgwells <-hgwells %>% unnest_tokens(word, text)
text_bronte <- bronte %>% unnest_tokens(word, text)
data(stop_words)
?data
stop_words
text_hgwells <- text_hgwells %>% anti_join(stop_words)
text_bronte <- text_bronte %>% anti_join(stop_words)
text_hgwells
text_hgwells %>% count(word) %>% arrange(desc(n)) %>% slice(1:20)
text_hgwells %>% mutate(word = SnowballC::wordStem(word)) %>%
count(word) %>% arrange(desc(n)) %>% slice(1:20)
text_bronte %>%
count(word) %>%
arrange(desc(n)) %>%
slice(1:20) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip()
text_hgwells <- text_hgwells %>% mutate(title = case_when(
gutenberg_id==35 ~ "The Time Machine",
gutenberg_id==36 ~ "War of the Worlds",
gutenberg_id==5230 ~ "The Invisible Man",
gutenberg_id==159 ~ "The Island of Dr. Moreau"
)) %>% select(-gutenberg_id)
book_words <- text_hgwells %>% count(word, title, sort = T)
total_words <- book_words %>%
group_by(title) %>%
summarize(total = sum(n))
book_words <- left_join(book_words, total_words)
freq_by_rank <- book_words %>%
group_by(title) %>%
mutate(rank = row_number(),
`term frequency` = n/total)
freq_by_rank
book_words <- book_words %>%
bind_tf_idf(word, title, n)
book_words
book_words %>%
select(-total) %>%
arrange(desc(tf_idf)) %>% slice(1:20)
bigrams_hgwells <-hgwells %>% unnest_tokens(bigram, text, token = 'ngrams', n=2)
bigrams_hgwells <- bigrams_hgwells %>% mutate(title = case_when(
gutenberg_id==35 ~ "The Time Machine",
gutenberg_id==36 ~ "War of the Worlds",
gutenberg_id==5230 ~ "The Invisible Man",
gutenberg_id==159 ~ "The Island of Dr. Moreau"
)) %>% select(-gutenberg_id)
bigrams_hgwells %>%
count(bigram, sort = TRUE)
bigrams_hgwells <- bigrams_hgwells %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>% unite(bigram, word1, word2, sep = " ")
bigrams_hgwells
bigrams_hgwells <- bigrams_hgwells %>% count(title, bigram)
bigrams_hgwells
bigram_tf_idf <- bigrams_hgwells %>%
count(title, bigram) %>%
bind_tf_idf(bigram, title, n) %>%
arrange(desc(tf_idf)) %>% slice(1:20)
bigram_tf_idf
dtm_bigrams <- bigrams_hgwells %>% cast_dtm(document = title, term = bigram, value = n)
matrix <- as.matrix(dtm_bigrams)
temp <- as_tibble(matrix)
set.seed(2048)
